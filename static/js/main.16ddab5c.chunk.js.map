{"version":3,"sources":["components/search-bar/styles.js","components/search-bar/SearchBar.js","pages/home-page/styles.js","pages/home-page/HomePage.js","components/song-card/styles.js","components/song-card/SongCard.js","components/loading-spinner/styles.js","components/loading-spinner/LoadingSpinner.js","services/api.js","services/search-service.js","pages/search-page/styles.js","pages/search-page/SearchPage.js","components/media/styles.js","components/media/Media.js","components/song-info/styles.js","components/song-info/SongInfo.js","pages/song-lyrics-page/styles.js","pages/song-lyrics-page/SongLyricsPage.js","components/artist-info/styles.js","components/artist-info/ArtistInfo.js","pages/artist-page/styles.js","pages/artist-page/ArtistPage.js","components/navbar/Navbar.js","routes.js","App.js","index.js"],"names":["Form","styled","form","SearchInput","input","SearchButton","button","SearchBar","useState","searchText","setsearchText","history","useHistory","onSubmit","e","event","preventDefault","searchPath","push","handleSearch","placeholder","value","onChange","target","type","Container","div","Title","h1","MusicNote","HomePage","CardContent","SubTitle","Image","img","SongCard","song","style","onClick","path","id","handleSongSelection","src","song_art_image_thumbnail_url","title","primary_artist","name","Spinner","LoadingSpinner","params","baseURL","process","api","axios","create","getSerchResults","param","a","get","data","getSongLyrics","getArtistInfo","h2","SearchResultPage","songs","setSongs","searchQuery","setSearchQuery","useEffect","search","URLSearchParams","location","loadSearchResults","API","response","result_songs","hits","map","result","index","handleSelection","Player","iframe","ContentContainer","Icon","Media","medias","media","setMedia","openExternalURL","url","newWindow","window","open","opener","mediasObj","reduce","acc","provider","youtube","replace","getYoutubeURL","display","Object","keys","length","spotify","soundcloud","InfoContainer","Label","Text","span","ArtistName","SongInfo","artist","album","releaseDate","writers","showArtistPage","writersNames","writer","join","formatWriters","Header","SongTitle","Lyrics","SongInfoContainer","SongLyricsPage","match","setSong","loadSongLyrics","selectedSongId","song_id","title_with_featured","lyrics","release_date_for_display","writer_artists","ArtistDescription","ReadMore","props","showFullDescription","ArtistInfo","description","descriptionText","setdescriptionText","setShowFullDescription","text","plain","substring","ArtistPhoto","TitleSongs","SongsContainer","ArtistPage","setArtist","loadArtistInfo","artistId","image_url","top_songs","width","margin","padding","Navbar","AppBar","position","backgroundColor","Toolbar","Typography","variant","marginRight","cursor","Routes","useLocation","pathname","exact","component","SearchPage","to","App","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.16ddab5c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 25%;\n  min-width: 210px;\n  position: relative;\n`;\n\nexport const SearchInput = styled.input`\n  height: 28px;\n  border-radius: 30px;\n  background-color: white;\n  border: none;\n  margin: 5px 0;\n  font-size: 16px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  right: 0.5vw;\n  top: 0.5rem;\n  background: none;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, SearchInput, SearchButton } from './styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst SearchBar = () => {\n  const [searchText, setsearchText] = useState('');\n  const history = useHistory();\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n\n    if (searchText) {\n      const searchPath = `/results?search=${searchText}`;\n\n      history.push(searchPath);\n    }\n  };\n\n  return (\n    <Form onSubmit={(e) => handleSearch(e)}>\n      <SearchInput\n        placeholder='Search song lyrics...'\n        value={searchText}\n        onChange={(e) => setsearchText(e.target.value)}\n      />\n      <SearchButton type='submit'>\n        <SearchIcon />\n      </SearchButton>\n    </Form>\n  );\n};\n\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: #1A649C;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  min-height: 100vh;\n`;\n\nexport const Title = styled.h1`\n  color: white;\n  display: inline-flex;\n  padding-left: 4.0rem;\n`;\n\nexport const MusicNote = styled.div`\n  top: 60px;\n  left: 0;\n  animation: notes 3s infinite linear;\n  font-size: 35px;\n  opacity: 0;\n  @keyframes notes {\n    0% {\n      transform: scale(1) translate(0, 0);\n      opacity: 0;\n    }\n    50% {\n      opacity: 1;\n      transform: scale(1.5) translate(50%, -50%);\n    }\n    80% {\n      opacity: 0;\n      transform: scale(1.5) translate(100%, -100%);\n    }\n    100% {\n      transform: scale(1.5) translate(100%, -100%);\n      opacity: 0;\n    }\n`;","import SearchBar from '../../components/search-bar/SearchBar';\n\nimport { Container, Title, MusicNote } from './styles';\n\nconst HomePage = () => {\n  return (\n    <Container>\n      <Title>\n        EverLyrics\n        <MusicNote>&#9835; &#9833;</MusicNote>\n      </Title>\n      <SearchBar />\n    </Container>\n  );\n};\n\nexport default HomePage;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 1rem;\n  width: 320px;\n  height: 90px;\n  border-radius: 10px;\n  margin: 10px;\n  background: white;\n  box-shadow: 0.25rem 0.25rem 0.6rem rgb(0 0 0 / 10%),\n    0 0.5rem 1.125rem rgb(75 0 0 / 10%);\n  transition: transform 350ms ease;\n  cursor: pointer;\n  display: flex;\n\n  &:hover {\n    transform: scale(1.02) translate(0px, -3px);\n  }\n`;\n\nexport const CardContent = styled.div`\n  margin-left: 1rem;\n`;\n\nexport const Title = styled.div``;\n\nexport const SubTitle = styled.div`\n  font-size: 0.9rem;\n  padding-top: 10px;\n`;\n\nexport const Image = styled.img`\n  width: 90px;\n`;\n","import { useHistory } from 'react-router-dom';\n\nimport { Container, Title, Image, SubTitle, CardContent } from './styles';\n\nconst SongCard = ({ song, style }) => {\n  const history = useHistory();\n\n  const handleSongSelection = () => {\n    const path = `/lyrics/${song.id}`;\n\n    history.push(path);\n  };\n\n  return (\n    <Container onClick={() => handleSongSelection()} style={style}>\n      <Image src={song.song_art_image_thumbnail_url} />\n      <CardContent>\n        <Title>{song.title}</Title>\n        <SubTitle>{song.primary_artist?.name}</SubTitle>\n      </CardContent>\n    </Container>\n  );\n};\n\nexport default SongCard;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 40vh;\n`;\n\nexport const Spinner = styled.div`\n  display: inline-block;\n  width: 1.5rem;\n  height: 1.5rem;\n  vertical-align: text-bottom;\n  border: 0.25em solid;\n  border-right: 0.25em solid transparent;\n  border-radius: 50%;\n  animation: spinner 0.75s infinite linear;\n  color: #1a649c;\n\n  @keyframes spinner {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { Container, Spinner } from './styles';\n\nconst LoadingSpinner = () => {\n  return (\n    <Container>\n      <Spinner />\n    </Container>\n  );\n};\n\nexport default LoadingSpinner;","import axios from 'axios';\n\nconst apiURL = process.env.REACT_APP_BASE_API_URL;\nconst params = { baseURL: apiURL };\nconst api = axios.create(params);\n\nexport default api;","import api from './api';\n\nexport const getSerchResults = async (param) => {\n  const data = await api.get('/search', { params: param });\n\n  return data;\n};\n\nexport const getSongLyrics = async (param) => {\n  const data = await api.get('/song', { params: param });\n\n  return data;\n};\n\nexport const getArtistInfo = async (param) => {\n  const data = await api.get('/artist', { params: param });\n\n  return data;\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`\nexport const Title = styled.h2`\n`","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport SongCard from '../../components/song-card/SongCard';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\n\nimport * as API from '../../services/search-service';\n\nimport { Container, Title } from './styles.js';\n\nconst SearchResultPage = () => {\n  const [songs, setSongs] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(history?.location?.search);\n    const search = urlParams.get('search');\n\n    setSearchQuery(search);\n    loadSearchResults(search);\n  }, [history, history.location]);\n\n  const loadSearchResults = async (searchQuery) => {\n    const response = await API.getSerchResults({ searchQuery: searchQuery });\n    const result_songs = response?.data?.response?.hits.map(\n      (song) => song.result\n    );\n\n    setSongs(result_songs);\n  };\n\n  const handleSongSelection = (song) => {\n    const path = `/lyrics/${song.id}`;\n\n    history.push(path);\n  };\n\n  return (\n    <Container>\n      <Title>Top results for \"{searchQuery}\" </Title>\n      {songs ? (\n        songs.map((song, index) => (\n          <SongCard\n            key={index}\n            song={song}\n            handleSelection={handleSongSelection}\n          />\n        ))\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Container>\n  );\n};\n\nexport default SearchResultPage;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-left: auto;\n`;\n\nexport const Player = styled.iframe`\n  width: 450px;\n  height: 280px;\n  border: solid #44444433;\n  border-width: 1px;\n  margin-bottom: 1rem;\n\n  @media (max-width: 992px) {\n    width: 342px;\n  }\n\n  @media (max-width: 351px) {\n    width: 300px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  margin-top: 0px;\n`;\n\nexport const ContentContainer = styled.div``;\n\nexport const Icon = styled.img`\n  height: 40px;\n  width: 40px;\n  margin-right: 15px;\n  cursor: pointer;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { Container, Player, Title, ContentContainer, Icon } from './styles';\n\nconst Media = ({ medias }) => {\n  const [media, setMedia] = useState({});\n\n  const getYoutubeURL = () => {\n    let url = media?.youtube?.replace('watch?v=', 'embed/');\n    url = url?.replace('http', 'https');\n\n    return url;\n  };\n\n  const openExternalURL = (url) => {\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n    if (newWindow) newWindow.opener = null;\n  };\n\n  useEffect(() => {\n    const mediasObj = medias?.reduce(\n      (acc, media) => ({ ...acc, [media.provider]: media.url }),\n      {}\n    );\n    setMedia(mediasObj);\n  }, [medias]);\n\n  return (\n    <Container>\n      <Title>Music Video</Title>\n      <Player src={getYoutubeURL()}></Player>\n      <ContentContainer\n        style={{ display: Object.keys(media).length > 1 ? 'block' : 'none' }}\n      >\n        <Title>Listen also on</Title>\n        <Icon\n          src={process.env.PUBLIC_URL + '/spotify.png'}\n          onClick={() => openExternalURL(media.spotify)}\n          style={{ display: media.spotify ? 'inline-block' : 'none' }}\n        ></Icon>\n        <Icon\n          src={process.env.PUBLIC_URL + '/soundcloud.png'}\n          onClick={() => openExternalURL(media.soundcloud)}\n          style={{ display: media.soundcloud ? 'inline-block' : 'none' }}\n        ></Icon>\n      </ContentContainer>\n    </Container>\n  );\n};\n\nexport default Media;","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  margin-top: 1rem;\n`;\n\nexport const Container = styled.div`\n  margin-top: 1rem;\n  border-top: 1px solid rgb(0 0 0 / 50%);\n`;\n\nexport const InfoContainer = styled.div`\n  line-height: 1.5;\n`;\n\nexport const Label = styled.div`\n  font-size: 17px;\n  font-weight: bolder;\n  display: block;\n`;\nexport const Text = styled.span`\n  font-size: 16px;\n  font-weight: normal;\n`;\n\nexport const ArtistName = styled(Text)`\n    cursor: pointer;\n    color: #1A649C;\n`","import { useHistory } from 'react-router-dom';\n\nimport {\n  Container,\n  Title,\n  InfoContainer,\n  Label,\n  ArtistName,\n  Text,\n} from './styles';\n\nconst SongInfo = ({ artist, album, releaseDate, writers }) => {\n  const history = useHistory();\n\n  const formatWriters = () => {\n    let writersNames = writers.map((writer) => writer.name);\n\n    writersNames = writersNames.join(', ');\n\n    return writersNames;\n  };\n\n  const showArtistPage = (artist) => {\n    const path = `/artist/${artist.id}`;\n\n    history.push(path);\n  };\n\n  return (\n    <Container>\n      <Title>Song Info</Title>\n      <InfoContainer>\n        <Label>\n          Artist:\n          <ArtistName onClick={() => showArtistPage(artist)}>\n            {' ' + artist.name}\n          </ArtistName>\n        </Label>\n        <Label>\n          Album:\n          <Text> {album?.name}</Text>\n        </Label>\n        <Label>\n          Release Date:\n          <Text> {releaseDate}</Text>\n        </Label>\n        <Label>\n          Writers:\n          <Text> {formatWriters()}</Text>\n        </Label>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default SongInfo;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  width: 100%;\n  max-width: 344px;\n  position: relative;\n  \n  @media (min-width: 480px) {\n    max-width: 728px;\n  }\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 2rem;\n`;\n\nexport const SongTitle = styled.h1``;\n\nexport const ArtistName = styled.span`\n  cursor: pointer;\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n`;\n\nexport const ContentContainer = styled.div`\n  margin-top: 2rem;\n  font-family: Arial, sans-serif;\n  color: #444;\n  display: flex;\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n  }\n}\n`;\n\nexport const Lyrics = styled.div`\n  white-space: pre-wrap;\n  line-height: 1.5;\n}\n`;\n\nexport const SongInfoContainer = styled.div`\n  margin-left: auto;\n  max-width: 452px;\n\n  @media (max-width: 992px) {\n    margin-left: 0px;\n    margin-top: 2rem;\n  }\n}\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  height: 150px;\n  border: solid #44444433;\n`;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport * as API from '../../services/search-service';\n\nimport Media from '../../components/media/Media';\nimport SongInfo from '../../components/song-info/SongInfo';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\n\nimport {\n  Container,\n  Image,\n  Header,\n  InfoContainer,\n  SongTitle,\n  ArtistName,\n  ContentContainer,\n  Lyrics,\n  SongInfoContainer,\n} from './styles.js';\n\nconst SongLyricsPage = ({ match }) => {\n  const [song, setSong] = useState();\n  const history = useHistory();\n\n  const loadSongLyrics = async (selectedSongId) => {\n    const params = { song_id: selectedSongId };\n    const response = await API.getSongLyrics(params);\n\n    setSong(response?.data?.song);\n  };\n\n  const showArtistPage = (artist) => {\n    const path = `/artist/${artist.id}`;\n\n    history.push(path);\n  };\n\n  useEffect(() => {\n    const selectedSongId = match?.params?.id;\n\n    loadSongLyrics(selectedSongId);\n  }, [match]);\n\n  return (\n    <>\n      {song ? (\n        <Container>\n          <Header>\n            <Image src={song.song_art_image_thumbnail_url}></Image>\n            <InfoContainer>\n              <SongTitle>{song.title_with_featured}</SongTitle>\n              <ArtistName onClick={() => showArtistPage(song.primary_artist)}>\n                {song.primary_artist?.name}\n              </ArtistName>\n            </InfoContainer>\n          </Header>\n          <ContentContainer>\n            <Lyrics>{song.lyrics}</Lyrics>\n            <SongInfoContainer>\n              <Media medias={song.media} />\n              <SongInfo\n                artist={song.primary_artist}\n                album={song.album}\n                releaseDate={song.release_date_for_display}\n                writers={song.writer_artists}\n              />\n            </SongInfoContainer>\n          </ContentContainer>\n        </Container>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </>\n  );\n};\n\nexport default SongLyricsPage;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 1.5rem;\n  background-color: white;\n  position: relative;\n  max-width: 300px;\n  margin: 0 auto;\n\n  @media (min-width: 550px) {\n    max-width: 480px;\n    margin: 5px;\n  }\n  \n  @media (min-width: 743px) {\n    max-width: 665px;\n  }\n  @media (min-width: 856px) {\n    max-width: 960px;\n  }\n}\n`;\n\nexport const ArtistDescription = styled.div`\n  white-space: pre-wrap;\n  text-align: justify;\n  line-height: 1.5;\n}\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  margin-top: 0;\n`;\n\nexport const ReadMore = styled.span`\n  color: #1a649c;\n  cursor: pointer;\n  display: ${(props) => (props.showFullDescription ? 'none' : 'block')};\n`;","import { useState, useEffect } from 'react';\n\nimport { Container, Title, ArtistDescription, ReadMore } from './styles';\n\nconst MAX_LENTGH = 800;\n\nconst ArtistInfo = ({ name, description }) => {\n  const [descriptionText, setdescriptionText] = useState('');\n  const [showFullDescription, setShowFullDescription] = useState(false);\n\n  useEffect(() => {\n    let text = description?.plain;\n\n    if (text?.length > MAX_LENTGH && !showFullDescription) {\n      text = text.substring(0, MAX_LENTGH) + '... ';\n    }\n\n    setdescriptionText(text);\n  }, [description, showFullDescription]);\n\n  const toggleFullDescription = () => {\n    setShowFullDescription(true);\n  };\n\n  return (\n    <Container>\n      <Title>{`About ${name}`}</Title>\n      {description?.plain?.length > MAX_LENTGH ? (\n        <ArtistDescription>\n          {descriptionText}\n          <ReadMore\n            onClick={() => toggleFullDescription()}\n            showFullDescription={showFullDescription}\n          >\n            read more\n          </ReadMore>\n        </ArtistDescription>\n      ) : (\n        <ArtistDescription>{description?.plain}</ArtistDescription>\n      )}\n    </Container>\n  );\n};\n\nexport default ArtistInfo;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  width: 100%;\n  position: relative;\n\n  @media (min-width: 480px) {\n    max-width: 728px;\n  }\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n`;\n\nexport const ArtistPhoto = styled.img`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n`;\n\nexport const ArtistName = styled.h1`\n  margin-left: 2rem;\n`;\n\nexport const ContentContainer = styled.div`\n  font-family: Arial, sans-serif;\n  color: #444;\n  display: flex;\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n  }\n}\n`;\n\nexport const TitleSongs = styled.h2`\n  font-size: 20px;\n  margin-top: 1.8rem;\n  width: 100%;\n  margin-left: 7.0vw;\n\n  @media (max-width: 992px) {\n    margin-left: 0px;\n    padding-left: 1rem;\n  }\n`;\n\nexport const SongsContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n  justify-content: center;\n`;","import { useState, useEffect } from 'react';\n\nimport SongCard from '../../components/song-card/SongCard';\nimport ArtistInfo from '../../components/artist-info/ArtistInfo';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\n\nimport * as API from '../../services/search-service';\n\nimport {\n  Container,\n  Header,\n  ArtistPhoto,\n  ArtistName,\n  ContentContainer,\n  TitleSongs,\n  SongsContainer,\n} from './styles.js';\n\nconst ArtistPage = ({ match }) => {\n  const [artist, setArtist] = useState();\n\n  const loadArtistInfo = async (artistId) => {\n    const params = { id: artistId };\n    const response = await API.getArtistInfo(params);\n\n    setArtist(response?.data?.artist);\n  };\n\n  useEffect(() => {\n    const artistId = match?.params?.id;\n\n    loadArtistInfo(artistId);\n  }, [match]);\n\n  return (\n    <>\n      {artist ? (\n        <Container>\n          <Header>\n            <ArtistPhoto src={artist.image_url}></ArtistPhoto>\n            <ArtistName> {artist.name}</ArtistName>\n          </Header>\n          <ContentContainer>\n            <ArtistInfo name={artist.name} description={artist.description} />\n            <SongsContainer>\n              <TitleSongs>Popular Songs</TitleSongs>\n              {artist.top_songs?.hits.map((song, index) => (\n                <SongCard\n                  key={index}\n                  song={song.result}\n                  style={{\n                    width: '235px',\n                    margin: '5px',\n                    padding: '0.8rem',\n                  }}\n                />\n              ))}\n            </SongsContainer>\n          </ContentContainer>\n        </Container>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </>\n  );\n};\n\nexport default ArtistPage;","import { useHistory } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport SearchBar from '../search-bar/SearchBar';\n\nconst Navbar = () => {\n  const history = useHistory();\n\n  const gotoHomePage = () => {\n    history.push('/');\n  };\n\n  return (\n    <AppBar position='static' style={{ backgroundColor: '#1A649C' }}>\n      <Toolbar>\n        <Typography\n          variant='h6'\n          style={{ marginRight: '2rem', cursor: 'pointer' }}\n          onClick={gotoHomePage}\n        >\n          Ever Lyrics\n        </Typography>\n        <SearchBar />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;","import HomePage from './pages/home-page/HomePage';\nimport SearchPage from './pages/search-page/SearchPage';\nimport SongLyricsPage from './pages/song-lyrics-page/SongLyricsPage';\nimport ArtistPage from './pages/artist-page/ArtistPage';\n\nimport Navbar from './components/navbar/Navbar';\n\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\n\nconst Routes = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      {location.pathname !== '/' && <Navbar />}\n      <Switch>\n        <Route exact path='/' component={HomePage}></Route>\n        <Route exact path='/results' component={SearchPage}></Route>\n        <Route exact path='/lyrics/:id' component={SongLyricsPage}></Route>\n        <Route exact path='/artist/:id' component={ArtistPage}></Route>\n        <Route exact path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default Routes;","import Routes from './routes';\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}